# Development Docker Compose configuration
# For local development with hot reload and debugging

version: '3.8'

services:
  # Backend API (Development)
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder  # Use builder stage for development
    image: dynamic-survey-api:dev
    container_name: survey-backend-dev
    
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG
      - AUTO_RELOAD=true
      # Database config
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_PUBLISHABLE_KEY=${SUPABASE_PUBLISHABLE_KEY}
      - SUPABASE_SECRET_KEY=${SUPABASE_SECRET_KEY}
      # LLM config
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      # Optional for development
      - LANGCHAIN_API_KEY=${LANGCHAIN_API_KEY}
    
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    
    volumes:
      # Mount source code for hot reload
      - ./backend/app:/app/app
      - ./backend/config:/app/config
      - ./backend/logs:/app/logs
      - backend_cache:/app/data/cache
    
    networks:
      - survey_network
    
    # Override command for development
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --log-level debug
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (Development with hot reload)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev  # Development Dockerfile
      args:
        - REACT_APP_API_URL=http://localhost:8000
        - REACT_APP_ENVIRONMENT=development
    image: dynamic-survey-frontend:dev
    container_name: survey-frontend-dev
    
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://backend:8000
      - WATCHPACK_POLLING=true  # For file watching in Docker
    
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    
    volumes:
      # Mount source code for hot reload
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/package.json:/app/package.json
      - frontend_node_modules:/app/node_modules
    
    networks:
      - survey_network
    
    depends_on:
      - backend
    
    # Override command for development
    command: npm start

  # Database (Optional - for local development without Supabase)
  postgres:
    image: postgres:15
    container_name: survey-postgres-dev
    
    environment:
      - POSTGRES_DB=survey_dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dev_password}
    
    ports:
      - "5432:5432"
    
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d/
    
    networks:
      - survey_network
    
    # Health check
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for development caching
  redis:
    image: redis:7-alpine
    container_name: survey-redis-dev
    
    command: redis-server --maxmemory 128mb --maxmemory-policy allkeys-lru
    
    ports:
      - "6379:6379"
    
    volumes:
      - redis_data:/data
    
    networks:
      - survey_network

# Named volumes for development
volumes:
  backend_cache:
    driver: local
  frontend_node_modules:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local

# Network configuration
networks:
  survey_network:
    driver: bridge