# Local Development Docker Compose with PostgreSQL
# This configuration uses local PostgreSQL instead of Supabase

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: survey-postgres-local
    environment:
      - POSTGRES_DB=survey_dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/migrations/001_initial_schema.sql:/docker-entrypoint-initdb.d/001_schema.sql:ro
      - ./database/migrations/002_populate_example_data.sql:/docker-entrypoint-initdb.d/002_data.sql:ro
      - ./database/migrations/003_theme_and_frontend_support.sql:/docker-entrypoint-initdb.d/003_theme.sql:ro
    networks:
      - survey_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (using local PostgreSQL)
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    image: dynamic-survey-api:local
    container_name: survey-backend-local
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG
      - DATABASE_URL=postgresql://postgres:dev_password@postgres:5432/survey_dev
      - USE_LOCAL_DB=true
      # LLM config (copy from your .env)
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LANGCHAIN_API_KEY=${LANGCHAIN_API_KEY}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app/app
      - ./backend/config:/app/config
      - ./backend/logs:/app/logs
    networks:
      - survey_network
    depends_on:
      postgres:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --log-level debug

  # Frontend (optional - can run separately with npm)
  frontend:
    build:
      context: ./frontend/form-app
      dockerfile: Dockerfile.dev
    image: dynamic-survey-frontend:local
    container_name: survey-frontend-local
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/form-app/src:/app/src
      - ./frontend/form-app/public:/app/public
    networks:
      - survey_network
    depends_on:
      - backend
    command: npm start

  # PgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: survey-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_CONFIG_SERVER_MODE=False
    ports:
      - "5050:80"
    networks:
      - survey_network
    depends_on:
      - postgres

volumes:
  postgres_data:
    driver: local

networks:
  survey_network:
    driver: bridge
